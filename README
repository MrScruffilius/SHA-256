THIS SMALL PROJECT IMPLEMENTS THE SHA-256 HASHING ALGORITHM IN JAVA.

THE CLASS "Calculator" EXISTS OF 3 METHODS:

    - main(String[]) -> THE MAIN-FUNCTION, THAT IS CALLED WHEN EXECUTING THE FILE ,E.G. IN A TERMINAL
                        THE ARGUMENTS THAT ARE PASSED FORM A STRING THAT IS HASHED, WHERE THE ARGUMENTS ARE SEPERATED BY SPACES. IF NO ARGUMENT IS PASSED; THE EMPTY STRING("") IS HASHED.

    - calc(String): String -> THIS FUNCTION RECEIVES A STRING THAT SHOULD GET HASHED AND RETURNS A STRING THAT IS A CONCATENATION OF 8 32-BIT VALUES IN HEXADECIMAL NOTATION. IT IS CALLED BY THE main-FUNCTION.

    -loops(int[]): int[] -> THE ONLY TASK OF THIS METHOD IS TO PROCESS THE 512-BIT BLOCKS INSIDE THE HASHING ALGORITHM AND MODIFY THEM TO 8 32-BIT VALUES. IT IS CALLED BY THE calc-FUNCTION, DEPENDING ON THE LENGTH OF THE INPUT STRING, MULTIPLE TIMES.


THIS CODE ISN'T OPTIMIZED AT ALL (POSSIBLE ADJUSTMENTS WOULD BE USING A RUNNABLE/THREAD FOR THE loops-FUNCTION OR MERGING THE loops- AND THE calc-FUNCTION). IT'S JUST A SMALL TEST IMPLEMENTATION WITH JUST A FEW LINES OF CODE.